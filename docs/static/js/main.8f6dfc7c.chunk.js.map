{"version":3,"sources":["components/home/ViewUser.js","components/home/GetUser.js","components/home/Input.js","firebase/firebase-config.js","types/types.js","actions/auth.js","components/design/NavBar.js","components/home/Home.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/auth/LoginScreen.js","routers/AuthRouter.js","routers/AppRouter.js","store/store.js","reducers/authReducer.js","theme-config.js","GitHubApp.js","index.js"],"names":["useStyles","makeStyles","theme","img","maxWidth","ViewUser","data","repositories","classes","login","avatar_url","type","Hidden","xsDown","Accordion","style","backgroundColor","AccordionSummary","expandIcon","Grid","container","justify","alignItems","direction","item","xs","textAlign","Typography","AccordionDetails","marginLeft","src","alt","className","map","info","ListItem","ListItemText","primary","name","smUp","marginTop","variant","color","GetUser","user","useEffect","searchUser","useState","setdata","setrepositories","a","fetch","json","data2","repos_url","repositories2","Input","setuser","state","setstate","gridContainer","height","width","margin","align","onSubmit","e","preventDefault","TextField","value","label","onChange","target","minWidth","Button","size","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","gitAuthProvider","auth","GithubAuthProvider","types","logout","root","flexGrow","menuButton","marginRight","spacing","title","modal","display","justifyContent","root2","media","NavBar","React","anchorEl","setAnchorEl","open","Boolean","abrir","setabrir","useSelector","email","photoURL","dispatch","useDispatch","AppBar","position","Toolbar","IconButton","onClick","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","signOut","Modal","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paper","Card","CardActionArea","CardMedia","image","CardContent","gutterBottom","component","Home","i","PrivateRoute","isAuthenticated","Component","rest","props","to","PublicRoute","LoginScreen","signInWithPopup","startIcon","AuthRouter","exact","path","AppRouter","setisAuthenticated","onAuthStateChanged","uid","payload","console","log","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","createMuiTheme","typography","fontFamily","GitHubApp","ThemeProvider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f6dfc7c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from \"@material-ui/core/Accordion\";\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  img: {\r\n    maxWidth: 200,\r\n  },\r\n}));\r\n\r\nexport const ViewUser = ({ data, repositories }) => {\r\n  const classes = useStyles();\r\n\r\n  const { login, avatar_url, type } = data;\r\n\r\n  return (\r\n    <div>\r\n      <Hidden xsDown>\r\n        <div>\r\n          <Accordion style={{ backgroundColor: \"#e9c46a\" }}>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Grid\r\n                container\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                direction=\"row\"\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    <Grid item xs={3} style={{ textAlign: \"center\" }}>\r\n                      <Typography>UserName</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3} style={{ textAlign: \"center\" }}>\r\n                      <Typography>Avatar</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3} style={{ textAlign: \"center\" }}>\r\n                      <Typography>Respositorios</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={2} style={{ textAlign: \"center\" }}>\r\n                      <Typography>Organizacion</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionSummary>\r\n            <AccordionDetails style={{ marginLeft: \"150px\" }}>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Grid container>\r\n                    <Grid item xs={2}>\r\n                      <Typography>{login}</Typography>\r\n                    </Grid>\r\n                    <Grid item xs={3} style={{ textAlign: \"center\" }}>\r\n                      <img src={avatar_url} alt=\"alt\" className={classes.img} />\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      {repositories.map((info) => (\r\n                        <ListItem\r\n                          key={info.name}\r\n                          style={{ textAlign: \"center\" }}\r\n                        >\r\n                          <ListItemText primary={info.name} />\r\n                        </ListItem>\r\n                      ))}\r\n                    </Grid>\r\n                    <Grid item xs={3} style={{ textAlign: \"center\" }}>\r\n                      {type === \"User\" ? (\r\n                        <Typography>No</Typography>\r\n                      ) : (\r\n                        <Typography>Si</Typography>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n      </Hidden>\r\n      <Hidden smUp>\r\n        <div style={{ marginTop: \"50px\" }}>\r\n          <Accordion style={{ backgroundColor: \"#e9c46a\" }}>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography>UserName</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <Typography variant=\"h6\" color=\"initial\">\r\n                {login}\r\n              </Typography>\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion style={{ backgroundColor: \"#e9c46a\" }}>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography>Avatar</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              <img src={avatar_url} alt=\"alt\" className={classes.img} />\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion style={{ backgroundColor: \"#e9c46a\" }}>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography>Repositorios</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {repositories.map((info) => (\r\n                <ListItem key={info.name} style={{ textAlign: \"center\" }}>\r\n                  <ListItemText primary={info.name} />\r\n                </ListItem>\r\n              ))}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n          <Accordion style={{ backgroundColor: \"#e9c46a\" }}>\r\n            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n              <Typography>Organizaciones</Typography>\r\n            </AccordionSummary>\r\n            <AccordionDetails>\r\n              {type === \"User\" ? (\r\n                <Typography>No</Typography>\r\n              ) : (\r\n                <Typography>Si</Typography>\r\n              )}\r\n            </AccordionDetails>\r\n          </Accordion>\r\n        </div>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { ViewUser } from \"./ViewUser\";\r\n\r\nexport const GetUser = ({ user }) => {\r\n  useEffect(() => {\r\n    searchUser();\r\n  }, []);\r\n\r\n  const [data, setdata] = useState({});\r\n  const [repositories, setrepositories] = useState([]);\r\n\r\n  const searchUser = async () => {\r\n    const data = await fetch(`https://api.github.com/users/${user}`);\r\n    const data2 = await data.json();\r\n\r\n    const repositories = await fetch(data2.repos_url);\r\n    const repositories2 = await repositories.json();\r\n\r\n    setdata(data2);\r\n    setrepositories(repositories2);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ViewUser data={data} repositories={repositories} />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles, Typography } from \"@material-ui/core\";\r\n\r\nexport const Input = ({ setuser }) => {\r\n  const [state, setstate] = useState([]);\r\n\r\n  const handleInputChange = (e) => {\r\n    setstate(e.target.value);\r\n  };\r\n\r\n  const searchUsers = (e) => {\r\n    e.preventDefault();\r\n    setuser((user) => [...user, state]);\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    gridContainer: {\r\n      height: \"10vh\",\r\n      width: \"100vw\",\r\n      margin: \"20px\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        variant=\"h3\"\r\n        align=\"center\"\r\n        style={{ marginTop: \"50px\", color: \"white\" }}\r\n      >\r\n        Search GitHub Users\r\n      </Typography>\r\n      <form onSubmit={searchUsers}>\r\n        <Grid\r\n          container\r\n          className={classes.gridContainer}\r\n          justify=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <TextField\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            value={state}\r\n            label=\"user...\"\r\n            onChange={handleInputChange}\r\n            style={{ width: \"300px\", minWidth: 100 }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            style={{\r\n              backgroundColor: \"#2a9d8f\",\r\n              color: \"white\",\r\n              marginLeft: \"10px\",\r\n            }}\r\n          >\r\n            Search users\r\n          </Button>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDNqrUwD_ILvBzZLQFxSZN-uNJIpF7TGds\",\r\n  authDomain: \"github-users-c9ab9.firebaseapp.com\",\r\n  projectId: \"github-users-c9ab9\",\r\n  storageBucket: \"github-users-c9ab9.appspot.com\",\r\n  messagingSenderId: \"574642476488\",\r\n  appId: \"1:574642476488:web:c45ccb04c54589f735dcfd\",\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst gitAuthProvider = new firebase.auth.GithubAuthProvider();\r\n\r\nexport { db, gitAuthProvider, firebase };\r\n","export const types = {\r\n  login: \"[Auth] Login\",\r\n  logout: \"[Auth] Logout\",\r\n};\r\n","import { firebase, gitAuthProvider } from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const loginWithGitHub = () => {\r\n  return (dispatch) => {\r\n    firebase.auth().signInWithPopup(gitAuthProvider);\r\n  };\r\n};\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nexport const login = (email, photoURL) => ({\r\n  type: types.login,\r\n  payload: {\r\n    email,\r\n    photoURL,\r\n  },\r\n});\r\n\r\nexport const logout = () => ({\r\n  type: types.logout,\r\n});\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport Backdrop from \"@material-ui/core/Backdrop\";\r\nimport Fade from \"@material-ui/core/Fade\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  modal: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  root2: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 240,\r\n    width: 340,\r\n  },\r\n}));\r\n\r\nexport const NavBar = () => {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const [abrir, setabrir] = React.useState(false);\r\n  const { email, photoURL } = useSelector((state) => state.auth);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleOpen = () => {\r\n    setabrir(true);\r\n  };\r\n\r\n  const handleClose2 = () => {\r\n    setabrir(false);\r\n  };\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{ height: \"10vh\", backgroundColor: \"#264653\" }}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            GitHub Users\r\n          </Typography>\r\n          <div>\r\n            <IconButton onClick={handleMenu} color=\"inherit\">\r\n              <AccountCircle />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorEl}\r\n              anchorOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: \"top\",\r\n                horizontal: \"right\",\r\n              }}\r\n              open={open}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem onClick={handleOpen}>Profile</MenuItem>\r\n\r\n              <MenuItem onClick={handleLogout}>Logout</MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Modal\r\n        className={classes.modal}\r\n        open={abrir}\r\n        onClose={handleClose2}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={abrir}>\r\n          <div className={classes.paper}>\r\n            <Card className={classes.root2}>\r\n              <CardActionArea>\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={photoURL}\r\n                  title=\"Contemplative Reptile\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    Email:\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {email}\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n            </Card>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { GetUser } from \"./GetUser\";\r\nimport { Input } from \"./Input\";\r\nimport { NavBar } from \"../design/NavBar\";\r\n\r\nexport const Home = () => {\r\n  const [user, setuser] = useState([]);\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <Input setuser={setuser} />\r\n      {user.map((user, i) => (\r\n        <GetUser key={i} user={user} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/auth/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPublicRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginWithGitHub } from \"../../actions/auth\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const loginGitHub = () => {\r\n    dispatch(loginWithGitHub());\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        height: \"100vh\",\r\n      }}\r\n    >\r\n      <div>\r\n        <Typography variant=\"h1\" color=\"initial\">\r\n          Hello, this is my app!\r\n        </Typography>\r\n        <Button\r\n          type=\"submit\"\r\n          onClick={loginGitHub}\r\n          variant=\"contained\"\r\n          style={{\r\n            backgroundColor: \"#2a9d8f\",\r\n            color: \"white\",\r\n            width: \"35vw\",\r\n            height: \"10vh\",\r\n          }}\r\n          startIcon={<GitHubIcon />}\r\n        >\r\n          LOGIN WHITH GITHUB\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n        <Redirect to=\"/auth/login\" />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { Home } from \"../components/home/Home\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\nimport { firebase } from \"../firebase/firebase-config\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\n\r\nexport const AppRouter = () => {\r\n  const [isAuthenticated, setisAuthenticated] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user?.uid) {\r\n        setisAuthenticated(true);\r\n        dispatch(login(user.email, user.photoURL));\r\n        console.log(user);\r\n      } else {\r\n        setisAuthenticated(false);\r\n      }\r\n    });\r\n  }, [dispatch, isAuthenticated]);\r\n\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            path=\"/auth\"\r\n            component={AuthRouter}\r\n            isAuthenticated={isAuthenticated}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path=\"/\"\r\n            component={Home}\r\n            isAuthenticated={isAuthenticated}\r\n          />\r\n\r\n          <Redirect to=\"/auth/login\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import { applyMiddleware, combineReducers, createStore, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { authReducer } from \"../reducers/authReducer\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return action.payload;\r\n\r\n    case types.logout:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\"Poppins\", \"sans-serif\"],\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\nimport { ThemeProvider } from \"@material-ui/core\";\r\nimport { theme } from \"./theme-config\";\r\n\r\nexport const GitHubApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeProvider theme={theme}>\r\n        <AppRouter />\r\n      </ThemeProvider>\r\n    </Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GitHubApp } from \"./GitHubApp\";\nimport \"./style.css\";\n\nReactDOM.render(<GitHubApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}